;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Cum Mar 11 2016
; Processor: 8086
; Compiler:  MASM32
;
; Before starting simulation set Internal Memory Size 
; in the 8086 model properties to 0x10000
;====================================================================


CODE    SEGMENT PARA 'CODE'
        ASSUME CS:CODE, DS:DATA, SS:STAK
STAK    SEGMENT PARA STACK 'STACK'
        DW 20 DUP(?)
STAK    ENDS

DATA    SEGMENT PARA 'DATA'
SERIALDATA  DB 15 DUP (?)
DATA    ENDS
START PROC FAR
        MOV AX, DATA
	MOV DS, AX
	
	;Mod Seçim işlemi
	MOV DX, 010DH
        MOV AL, 01001101B
        OUT DX, AL
	
	 ;Resetleme
        MOV AL, 40H
        OUT DX, AL

	;mod seçme
        MOV AL, 01001101B
        OUT DX, AL
	
	 ;Kontrol Yazmacı oluşturma
        MOV AL, 00010101B
        OUT DX, AL
ENDLESS:
        MOV DX,10DH;A2 yi 1 e eşitler
	Control_Ready:
	       IN AL,DX
	       AND AL,01H ;ALMAYA HAZIR OLUP OLMADIĞINI KONTROL EDER
	       JZ Control_Ready
	       
	 MOV DX,109H    ;;;;;;;;;;;;;;;;;;
	 MOV AL,'S'       ;S Karakterini Yollar
	 OUT DX,AL      ;;;;;;;;;;;;;;;;;
	 
	 MOV DX,10DH
	 
	 Control_Ready2:
	       IN AL,DX
	       AND AL,01H ;ALMAYA HAZIR OLUP OLMADIĞINI KONTROL EDER
	       JZ Control_Ready2
	 
	 MOV DX,109H  ;;;;;;;;;;;;;;;;;;
	 MOV AL,'R' 	;R Karakterini Yollar
	 OUT DX,AL    ;;;;;;;;;;;;;;;;;
	 
	 
	 ;recieve işleminin başlangıcı
	 MOV DX,10DH
	 TKR1:
	    IN AL,DX
	    TEST AL,02H
	    JZ TKR1
	    
	MOV DX, 0109H
	IN AL, DX
         
	
	 
	 CMP AL,'A'   ;Cevap olarak 'A' karakteri gelip gelmediğini kontrol eder.
	 JNZ ENDLESS
	 

DEVAM:	 
	 XOR SI, SI
	 MOV CX,5
	 ;5 KEZ D YOLLAYARAK ILETİŞİM GERÇEKLEŞTİRİR
	 DATA_LOOP:
		  MOV DX,10DH
		  Control_Ready3:
		     IN AL,DX
		     AND AL,01H ;ALMAYA HAZIR OLUP OLMADIĞINI KONTROL EDER
		     JZ Control_Ready3
		     
	 	 MOV DX,109H  ;;;;;;;;;;;;;;;;;;
	         MOV AL,'D' 	;D Karakterini Yollar
	         OUT DX,AL    ;;;;;;;;;;;;;;;;;
receive_control:
		 MOV DX, 10DH
		 IN AL, DX
		 AND AL, 02H
		 JZ receive_control
		 
		 MOV DX,109H 
		 IN AL,DX ;KAÇ KARAKTER YOLLANACAĞINI OKUR
		 SUB AL, '0'
		 
	
                 ;KARAKTERLERİ OKUR
		 PUSH CX
		 XOR CX, CX
		 MOV CL, AL
		 INNER_LOOP:
receive_control2:
		 MOV DX, 10DH
		 IN AL, DX
		 AND AL, 02H
		 JZ receive_control2
			MOV DX, 0109H
			IN AL,DX
			MOV SERIALDATA[SI],AL
			INC SI
			;DEC BX
			;CMP BX,0
		 LOOP INNER_LOOP
		 POP CX
	  LOOP DATA_LOOP
	  
	  MOV DX, 010DH
	  Control_Ready4:
		     IN AL,DX
		     AND AL,01H ;ALMAYA HAZIR OLUP OLMADIĞINI KONTROL EDER
		     JZ Control_Ready4
	  MOV DX,109H    ;;;;;;;;;;;;;;;;;;
	 MOV AL,'S'       ;S Karakterini Yollar
	 OUT DX,AL      ;;;;;;;;;;;;;;;;;
	  
	  MOV DX,10DH
	  Control_Ready5:
		     IN AL,DX
		     AND AL,01H ;ALMAYA HAZIR OLUP OLMADIĞINI KONTROL EDER
		     JZ Control_Ready5
		     
	 MOV DX,109H  ;;;;;;;;;;;;;;;;;;;;;;
	 MOV AL,'T' 	;T Karakterini Yollar
	 OUT DX,AL    ;;;;;;;;;;;;;;;;;;;;;;;
	 
        ;JMP ENDLESS
	
RETF
START ENDP
	

	
CODE    ENDS
        END START